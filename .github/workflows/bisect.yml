# This is a bisect workflow that is manually triggered

name: Bisect

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      old:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'The old endpoint of the bisection'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string
      new:
        description: 'The new endpoint of the bisection'
        required: true
        type: string
      code:
        description: 'Julia code to execute'
        required: true
        type: string


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "bisect"
  bisect:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: julia-actions/setup-julia@v1
    - uses: julia-actions/cache@v1
    - uses: julia-actions/julia-buildpkg@v1  
    - name: Hello world
      run: echo "Hello World"
    - name: Run bisetcion
      run: julia --project -e 'import Pkg; Pkg.add(url="https://github.com/LilithHafner/Bisect.jl"); display(bisect("${{ inputs.code }}", old="${{ inputs.old }}", new="${{ inputs.new }}"))'
    - name: Toodles
      run: echo "Toodles"
